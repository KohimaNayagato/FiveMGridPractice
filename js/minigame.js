let timer_start,timer_game,timer_finish,timer_time,good_positions,wrong,right,speed,timerStart,positions,game_started=!1,streak=0,max_streak=0,best_time=99.999,mode=7,mode_data={5:[10,"92px"],6:[14,"74px"],7:[18,"61px"],8:[20,"51px"],9:[24,"44px"],10:[28,"38px"]};const regex=/max-streak_thermite=([\d]+)/g;let cookie=document.cookie;null!==(cookie=regex.exec(cookie))&&(max_streak=cookie[1]);const regex_time=/best-time_thermite=([\d.]+)/g;cookie=document.cookie,null!==(cookie=regex_time.exec(cookie))&&(best_time=parseFloat(cookie[1]));const sleep=(e,t)=>setTimeout(t,e),range=(e,t,r=t-e+1)=>Array.from({length:r},((t,r)=>e+r)),shuffle=e=>{for(let t=e.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1)),o=e[t];e[t]=e[r],e[r]=o}};function listener(e){game_started&&(-1===good_positions.indexOf(parseInt(e.target.dataset.position))?(wrong++,e.target.classList.add("bad")):(right++,e.target.classList.add("good")),e.target.removeEventListener("mousedown",listener),check())}function addListeners(){document.querySelectorAll(".group").forEach((e=>{e.addEventListener("mousedown",listener)}))}function check(){if(3!==wrong){if(right===mode_data[mode][0]){stopTimer(),streak++,streak>max_streak&&(max_streak=streak,document.cookie="max-streak_thermite="+max_streak);let e=document.querySelector(".streaks .time").innerHTML;parseFloat(e)<best_time&&(best_time=parseFloat(e),document.cookie="best-time_thermite="+best_time);let t=new XMLHttpRequest;t.open("HEAD","streak.php?streak="+streak+"&max_streak="+max_streak+"&speed="+speed+"&mode="+mode+"&time="+e),t.send(),reset()}}else{resetTimer(),game_started=!1,streak=0;let e=document.querySelectorAll(".group");good_positions.forEach((t=>{e[t].classList.add("proper")}))}}function reset(){game_started=!1,resetTimer(),clearTimeout(timer_start),clearTimeout(timer_game),clearTimeout(timer_finish),document.querySelector(".splash").classList.remove("hidden"),document.querySelector(".groups").classList.add("hidden"),document.querySelectorAll(".group").forEach((e=>{e.remove()})),start()}function start(){wrong=0,right=0,positions=range(0,Math.pow(mode,2)-1),shuffle(positions),good_positions=positions.slice(0,mode_data[mode][0]);let e=document.createElement("div");e.classList.add("group"),e.style.width=mode_data[mode][1],e.style.height=mode_data[mode][1];const t=document.querySelector(".groups");for(let r=0;r<positions.length;r++){let o=e.cloneNode();o.dataset.position=r.toString(),t.appendChild(o)}addListeners(),document.querySelector(".streak").innerHTML=streak,document.querySelector(".max_streak").innerHTML=max_streak,document.querySelector(".best_time").innerHTML=best_time,timer_start=sleep(2e3,(function(){document.querySelector(".splash").classList.add("hidden"),document.querySelector(".groups").classList.remove("hidden");let e=document.querySelectorAll(".group");good_positions.forEach((t=>{e[t].classList.add("good")})),timer_game=sleep(4e3,(function(){document.querySelectorAll(".group.good").forEach((e=>{e.classList.remove("good")})),game_started=!0,startTimer(),speed=document.querySelector("#speed").value,timer_finish=sleep(1e3*speed,(function(){game_started=!1,wrong=3,check()}))}))}))}function startTimer(){timerStart=new Date,timer_time=setInterval(timer,1)}function timer(){let e=new Date,t=new Date;t.setTime(e-timerStart);let r=t.getMilliseconds(),o=t.getSeconds();r<10?r="00"+r:r<100&&(r="0"+r),document.querySelector(".streaks .time").innerHTML=o+"."+r}function stopTimer(){clearInterval(timer_time)}function resetTimer(){clearInterval(timer_time),document.querySelector(".streaks .time").innerHTML="0.000"}document.querySelector("#speed").addEventListener("input",(function(e){document.querySelector(".speed_value").innerHTML=e.target.value+"s",streak=0,reset()})),document.querySelector("#grid").addEventListener("input",(function(e){document.querySelector(".grid_value").innerHTML=e.target.value+"x"+e.target.value,mode=e.target.value,streak=0,reset()})),document.querySelector(".btn_again").addEventListener("click",(function(){streak=0,reset()})),start();